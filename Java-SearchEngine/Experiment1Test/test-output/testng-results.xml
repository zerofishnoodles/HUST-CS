<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="106" passed="106" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-05-14T09:10:20Z" name="All Test Suite" finished-at="2021-05-14T09:10:22Z" duration-ms="1457">
    <groups>
    </groups>
    <test started-at="2021-05-14T09:10:20Z" name="./test/hust/cs/javacourse/search/index/TermTest.java" finished-at="2021-05-14T09:10:20Z" duration-ms="47">
      <class name="hust.cs.javacourse.search.index.TermTest">
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractTerm;, int)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-14T09:10:20Z" name="testCompareTo" data-provider="testTerm" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@4387b79e]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractTerm;, int)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-14T09:10:20Z" name="testCompareTo" data-provider="testTerm" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@4f638935]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-14T09:10:20Z" name="testGetContent" data-provider="testTerm" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-14T09:10:20Z" name="testWriteObject" data-provider="testTerm" finished-at="2021-05-14T09:10:20Z" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[search engine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/Users/Ray/Desktop/CSXJ1902_U201912633_zhangrui/Experiment1Test/test/config/..//ser/Term.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-14T09:10:20Z" name="testSetContent" data-provider="testTerm" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have no dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have no dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTerm;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-14T09:10:20Z" name="testTestEquals" data-provider="testTerm" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@6e75aa0d]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-14T09:10:20Z" name="testTestToString" data-provider="testTerm" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTerm;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-14T09:10:20Z" name="testTestEquals" data-provider="testTerm" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@7fc229ab]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-14T09:10:20Z" name="testReadObject" data-provider="testTerm" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[search engine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/Users/Ray/Desktop/CSXJ1902_U201912633_zhangrui/Experiment1Test/test/config/..//ser/Term.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.TermTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/index/TermTest.java -->
    <test started-at="2021-05-14T09:10:20Z" name="./test/hust/cs/javacourse/search/index/TermTupleTest.java" finished-at="2021-05-14T09:10:20Z" duration-ms="0">
      <class name="hust.cs.javacourse.search.index.TermTupleTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@78ac1102]" started-at="2021-05-14T09:10:20Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@65d6b83b]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@78ac1102]" started-at="2021-05-14T09:10:20Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@45018215]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractTermTuple, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@78ac1102]" started-at="2021-05-14T09:10:20Z" name="testTestToString" data-provider="testTermTuple" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[<Search  cur_pos:100  freq:1>]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@30b7c004]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@78ac1102]" started-at="2021-05-14T09:10:20Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@d706f19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
      </class> <!-- hust.cs.javacourse.search.index.TermTupleTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/index/TermTupleTest.java -->
    <test started-at="2021-05-14T09:10:20Z" name="./test/hust/cs/javacourse/search/index/PostingTest.java" finished-at="2021-05-14T09:10:20Z" duration-ms="15">
      <class name="hust.cs.javacourse.search.index.PostingTest">
        <test-method signature="testSetPositions(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-14T09:10:20Z" name="testSetPositions" data-provider="testPosting" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId:0  freq:0  positions:[100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetPositions -->
        <test-method signature="testSetDocId(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-14T09:10:20Z" name="testSetDocId" data-provider="testPosting" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId:20  freq:0  positions:[]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocId -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractPosting, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-14T09:10:20Z" name="testTestToString" data-provider="testPosting" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId:1  freq:4  positions:[10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@51e5fc98]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testSetFreq(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-14T09:10:20Z" name="testSetFreq" data-provider="testPosting" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId:0  freq:8  positions:[]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetFreq -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractPosting, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-14T09:10:20Z" name="testWriteObject" data-provider="testPosting" finished-at="2021-05-14T09:10:20Z" duration-ms="15" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId:1  freq:4  positions:[10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/Users/Ray/Desktop/CSXJ1902_U201912633_zhangrui/Experiment1Test/test/config/..//ser/Posting.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-14T09:10:20Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@5dd6264]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractPosting;, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-14T09:10:20Z" name="testCompareTo" data-provider="testPosting" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@6193932a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testGetFreq(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-14T09:10:20Z" name="testGetFreq" data-provider="testPosting" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId:1  freq:4  positions:[10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFreq -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-14T09:10:20Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@1ffe63b9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-14T09:10:20Z" name="testGetDocId" data-provider="testPosting" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId:1  freq:4  positions:[10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-14T09:10:20Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@159f197]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testGetPositions(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-14T09:10:20Z" name="testGetPositions" data-provider="testPosting" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId:1  freq:4  positions:[10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[10, 100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPositions -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-14T09:10:20Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@78aab498]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-14T09:10:20Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@647fd8ce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testSort(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-14T09:10:20Z" name="testSort" data-provider="testPosting" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId:1  freq:4  positions:[10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[10, 100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractPosting, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-14T09:10:20Z" name="testReadObject" data-provider="testPosting" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId:1  freq:4  positions:[10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/Users/Ray/Desktop/CSXJ1902_U201912633_zhangrui/Experiment1Test/test/config/..//ser/Posting.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.PostingTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/index/PostingTest.java -->
    <test started-at="2021-05-14T09:10:20Z" name="./test/hust/cs/javacourse/search/index/PostingListTest.java" finished-at="2021-05-14T09:10:20Z" duration-ms="15">
      <class name="hust.cs.javacourse.search.index.PostingListTest">
        <test-method signature="testAdd(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-14T09:10:20Z" name="testAdd" data-provider="testPostingList" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId:1  freq:4  positions:[1, 2, 3, 4]}
{docId:2  freq:2  positions:[5, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@79b06cab]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method signature="testSize(hust.cs.javacourse.search.index.AbstractPostingList, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-14T09:10:20Z" name="testSize" data-provider="testPostingList" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId:1  freq:4  positions:[1, 2, 3, 4]}
{docId:2  freq:2  positions:[5, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testIndexOf(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-14T09:10:20Z" name="testIndexOf" data-provider="testPostingList" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId:1  freq:4  positions:[1, 2, 3, 4]}
{docId:2  freq:2  positions:[5, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@3c22fc4c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractPostingList, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-14T09:10:20Z" name="testTestToString" data-provider="testPostingList" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId:1  freq:4  positions:[1, 2, 3, 4]}
{docId:2  freq:2  positions:[5, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@149e0f5d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testClear(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.Object)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-14T09:10:20Z" name="testClear" data-provider="testPostingList" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method signature="testTestRemove(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-14T09:10:20Z" name="testTestRemove" data-provider="testPostingList" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@3aefe5e5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestRemove -->
        <test-method signature="testGet(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-14T09:10:20Z" name="testGet" data-provider="testPostingList" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId:1  freq:4  positions:[1, 2, 3, 4]}
{docId:2  freq:2  positions:[5, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@7f552bd3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method signature="testRemove(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-14T09:10:20Z" name="testRemove" data-provider="testPostingList" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@460d0a57]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method signature="testTestIndexOf(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-14T09:10:20Z" name="testTestIndexOf" data-provider="testPostingList" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId:1  freq:4  positions:[1, 2, 3, 4]}
{docId:2  freq:2  positions:[5, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@1184ab05]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestIndexOf -->
        <test-method signature="testSize(hust.cs.javacourse.search.index.AbstractPostingList, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-14T09:10:20Z" name="testSize" data-provider="testPostingList" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-14T09:10:20Z" name="testContains" data-provider="testPostingList" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId:1  freq:4  positions:[1, 2, 3, 4]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@3eb7fc54]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testTestAdd(hust.cs.javacourse.search.index.AbstractPostingList, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-14T09:10:20Z" name="testTestAdd" data-provider="testPostingList" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId:1  freq:4  positions:[1, 2, 3, 4]}
{docId:2  freq:2  positions:[5, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{docId:1  freq:4  positions:[1, 2, 3, 4]}, {docId:1  freq:4  positions:[2, 4, 3, 1]}, {docId:2  freq:2  positions:[5, 6]}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestAdd -->
        <test-method signature="testIsEmpty(hust.cs.javacourse.search.index.AbstractPostingList, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-14T09:10:20Z" name="testIsEmpty" data-provider="testPostingList" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testSort(hust.cs.javacourse.search.index.AbstractPostingList, [Ljava.lang.Integer;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-14T09:10:20Z" name="testSort" data-provider="testPostingList" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId:2  freq:4  positions:[5, 9, 7, 8]}
{docId:3  freq:2  positions:[10, 11]}
{docId:4  freq:4  positions:[1, 4, 3, 2]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Integer;@47d90b9e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort -->
        <test-method signature="testIsEmpty(hust.cs.javacourse.search.index.AbstractPostingList, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-14T09:10:20Z" name="testIsEmpty" data-provider="testPostingList" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId:1  freq:4  positions:[1, 2, 3, 4]}
{docId:2  freq:2  positions:[5, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-14T09:10:20Z" name="testReadObject" data-provider="testPostingList" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId:1  freq:4  positions:[1, 2, 3, 4]}
{docId:2  freq:2  positions:[5, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/Users/Ray/Desktop/CSXJ1902_U201912633_zhangrui/Experiment1Test/test/config/..//ser/PostingList.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-14T09:10:20Z" name="testWriteObject" data-provider="testPostingList" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId:1  freq:4  positions:[1, 2, 3, 4]}
{docId:2  freq:2  positions:[5, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/Users/Ray/Desktop/CSXJ1902_U201912633_zhangrui/Experiment1Test/test/config/..//ser/PostingList.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
      </class> <!-- hust.cs.javacourse.search.index.PostingListTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/index/PostingListTest.java -->
    <test started-at="2021-05-14T09:10:20Z" name="./test/hust/cs/javacourse/search/index/DocumentTest.java" finished-at="2021-05-14T09:10:21Z" duration-ms="16">
      <class name="hust.cs.javacourse.search.index.DocumentTest">
        <test-method signature="testGetTupleSize(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-14T09:10:20Z" name="testGetTupleSize" data-provider="testDocument" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docID: 1
docPath: C:/1.txt
termTuple:
[<aaa  cur_pos:17  freq:1>, <bbb  cur_pos:30  freq:1>]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTupleSize -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-14T09:10:20Z" name="testGetDocId" data-provider="testDocument" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docID: 1
docPath: C:/1.txt
termTuple:
[<aaa  cur_pos:17  freq:1>]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testSetDocPath(hust.cs.javacourse.search.index.AbstractDocument, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-14T09:10:20Z" name="testSetDocPath" data-provider="testDocument" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docID: 0
docPath: C:/2.txt
termTuple:
[]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/2.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocPath -->
        <test-method signature="testSetDocId(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-14T09:10:20Z" name="testSetDocId" data-provider="testDocument" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docID: 2
docPath: null
termTuple:
[]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocId -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-14T09:10:20Z" name="testContains" data-provider="testDocument" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docID: 1
docPath: C:/1.txt
termTuple:
[<aaa  cur_pos:17  freq:1>, <bbb  cur_pos:30  freq:1>]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[<bbb  cur_pos:30  freq:1>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.index.AbstractDocument, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-14T09:10:20Z" name="testGetDocPath" data-provider="testDocument" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docID: 1
docPath: C:/1.txt
termTuple:
[<aaa  cur_pos:17  freq:1>]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/1.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetTuples(hust.cs.javacourse.search.index.AbstractDocument, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-14T09:10:20Z" name="testGetTuples" data-provider="testDocument" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docID: 1
docPath: C:/1.txt
termTuple:
[<aaa  cur_pos:17  freq:1>, <bbb  cur_pos:30  freq:1>]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<aaa  cur_pos:17  freq:1>, <bbb  cur_pos:30  freq:1>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTuples -->
        <test-method signature="testGetTupleSize(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-14T09:10:20Z" name="testGetTupleSize" data-provider="testDocument" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docID: 1
docPath: C:/1.txt
termTuple:
[]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTupleSize -->
        <test-method signature="testGetTuple(hust.cs.javacourse.search.index.AbstractDocument, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-14T09:10:20Z" name="testGetTuple" data-provider="testDocument" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docID: 1
docPath: C:/1.txt
termTuple:
[<aaa  cur_pos:17  freq:1>, <bbb  cur_pos:30  freq:1>]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<aaa  cur_pos:17  freq:1>, <bbb  cur_pos:30  freq:1>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTuple -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractDocument, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-14T09:10:20Z" name="testTestToString" data-provider="testDocument" finished-at="2021-05-14T09:10:21Z" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docID: 1
docPath: C:/1.txt
termTuple:
[<aaa  cur_pos:17  freq:1>, <bbb  cur_pos:30  freq:1>]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@69b2283a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-14T09:10:20Z" name="testContains" data-provider="testDocument" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docID: 1
docPath: C:/1.txt
termTuple:
[<aaa  cur_pos:17  freq:1>, <bbb  cur_pos:30  freq:1>]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[<aaa  cur_pos:17  freq:1>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testAddTuple(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-14T09:10:20Z" name="testAddTuple" data-provider="testDocument" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docID: 1
docPath: C:/1.txt
termTuple:
[<aaa  cur_pos:17  freq:1>]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[<aaa  cur_pos:17  freq:1>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddTuple -->
      </class> <!-- hust.cs.javacourse.search.index.DocumentTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/index/DocumentTest.java -->
    <test started-at="2021-05-14T09:10:21Z" name="./test/hust/cs/javacourse/search/parse/TermTupleScannerTest.java" finished-at="2021-05-14T09:10:21Z" duration-ms="16">
      <class name="hust.cs.javacourse.search.parse.TermTupleScannerTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.TermTupleScannerTest@5d11346a]" started-at="2021-05-14T09:10:21Z" name="testNext" data-provider="testTermTupleScanner" finished-at="2021-05-14T09:10:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.TermTupleScanner@be64738]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<activity  cur_pos:0  freq:1>, <destination  cur_pos:1  freq:1>, <emergency  cur_pos:2  freq:1>, <26%  cur_pos:3  freq:1>, <u571  cur_pos:4  freq:1>, <because  cur_pos:5  freq:1>, <hence  cur_pos:6  freq:1>, <capital  cur_pos:7  freq:1>, <i  cur_pos:8  freq:1>, <frozen  cur_pos:9  freq:1>, <benefits  cur_pos:10  freq:1>, <google  cur_pos:11  freq:1>, <hahahahahahahahahahahahah  cur_pos:12  freq:1>, <ha  cur_pos:13  freq:1>, <frozen  cur_pos:14  freq:1>, <google  cur_pos:15  freq:1>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.TermTupleScannerTest@5d11346a]" started-at="2021-05-14T09:10:21Z" name="testNext" data-provider="testTermTupleScanner" finished-at="2021-05-14T09:10:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.TermTupleScanner@6f96c77]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<aaa  cur_pos:0  freq:1>, <bbb  cur_pos:1  freq:1>, <ccc  cur_pos:2  freq:1>, <ddd  cur_pos:3  freq:1>, <is  cur_pos:4  freq:1>, <f17  cur_pos:5  freq:1>, <2020  cur_pos:6  freq:1>, <ab  cur_pos:7  freq:1>, <ababababababababababab  cur_pos:8  freq:1>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.TermTupleScannerTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/parse/TermTupleScannerTest.java -->
    <test started-at="2021-05-14T09:10:21Z" name="./test/hust/cs/javacourse/search/parse/StopWordTermTupleFilterTest.java" finished-at="2021-05-14T09:10:21Z" duration-ms="0">
      <class name="hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@6dde5c8c]" started-at="2021-05-14T09:10:21Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2021-05-14T09:10:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@cd3fee8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<aaa  cur_pos:0  freq:1>, <bbb  cur_pos:1  freq:1>, <ccc  cur_pos:2  freq:1>, <ddd  cur_pos:3  freq:1>, <f17  cur_pos:4  freq:1>, <2020  cur_pos:5  freq:1>, <ab  cur_pos:6  freq:1>, <ababababababababababab  cur_pos:7  freq:1>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@6dde5c8c]" started-at="2021-05-14T09:10:21Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2021-05-14T09:10:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@470f1802]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<activity  cur_pos:0  freq:1>, <destination  cur_pos:1  freq:1>, <emergency  cur_pos:2  freq:1>, <26%  cur_pos:3  freq:1>, <u571  cur_pos:4  freq:1>, <capital  cur_pos:7  freq:1>, <frozen  cur_pos:9  freq:1>, <benefits  cur_pos:10  freq:1>, <google  cur_pos:11  freq:1>, <hahahahahahahahahahahahah  cur_pos:12  freq:1>, <ha  cur_pos:13  freq:1>, <frozen  cur_pos:14  freq:1>, <google  cur_pos:15  freq:1>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@6dde5c8c]" started-at="2021-05-14T09:10:21Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2021-05-14T09:10:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@3e2e18f2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<aaa  cur_pos:0  freq:1>, <bbb  cur_pos:1  freq:1>, <ccc  cur_pos:3  freq:1>, <ddd  cur_pos:4  freq:1>, <f17  cur_pos:6  freq:1>, <2020  cur_pos:7  freq:1>, <ab  cur_pos:8  freq:1>, <ababababababababababab  cur_pos:10  freq:1>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/parse/StopWordTermTupleFilterTest.java -->
    <test started-at="2021-05-14T09:10:21Z" name="./test/hust/cs/javacourse/search/parse/PatternTermTupleFilterTest.java" finished-at="2021-05-14T09:10:21Z" duration-ms="0">
      <class name="hust.cs.javacourse.search.parse.PatternTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.PatternTermTupleFilterTest@1f021e6c]" started-at="2021-05-14T09:10:21Z" name="testNext" data-provider="testPatternTermTupleFilter" finished-at="2021-05-14T09:10:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@70e8f8e]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<activity  cur_pos:0  freq:1>, <destination  cur_pos:1  freq:1>, <emergency  cur_pos:2  freq:1>, <because  cur_pos:5  freq:1>, <hence  cur_pos:6  freq:1>, <capital  cur_pos:7  freq:1>, <i  cur_pos:8  freq:1>, <frozen  cur_pos:9  freq:1>, <benefits  cur_pos:10  freq:1>, <google  cur_pos:11  freq:1>, <hahahahahahahahahahahahah  cur_pos:12  freq:1>, <ha  cur_pos:13  freq:1>, <frozen  cur_pos:14  freq:1>, <google  cur_pos:15  freq:1>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.PatternTermTupleFilterTest@1f021e6c]" started-at="2021-05-14T09:10:21Z" name="testNext" data-provider="testPatternTermTupleFilter" finished-at="2021-05-14T09:10:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@2e4b8173]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<aaa  cur_pos:0  freq:1>, <bbb  cur_pos:2  freq:1>, <ab  cur_pos:3  freq:1>, <ccc  cur_pos:4  freq:1>, <ddd  cur_pos:5  freq:1>, <ababababababababababab  cur_pos:7  freq:1>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.PatternTermTupleFilterTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/parse/PatternTermTupleFilterTest.java -->
    <test started-at="2021-05-14T09:10:21Z" name="./test/hust/cs/javacourse/search/parse/LengthTermTupleFilterTest.java" finished-at="2021-05-14T09:10:21Z" duration-ms="0">
      <class name="hust.cs.javacourse.search.parse.LengthTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.LengthTermTupleFilterTest@16022d9d]" started-at="2021-05-14T09:10:21Z" name="testNext" data-provider="testLengthTermTupleFilter" finished-at="2021-05-14T09:10:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.LengthTermTupleFilter@34b7ac2f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<aaa  cur_pos:0  freq:1>, <bbb  cur_pos:1  freq:1>, <ccc  cur_pos:3  freq:1>, <ddd  cur_pos:4  freq:1>, <f17  cur_pos:5  freq:1>, <2020  cur_pos:6  freq:1>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.LengthTermTupleFilterTest@16022d9d]" started-at="2021-05-14T09:10:21Z" name="testNext" data-provider="testLengthTermTupleFilter" finished-at="2021-05-14T09:10:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.LengthTermTupleFilter@e056f20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<activity  cur_pos:0  freq:1>, <destination  cur_pos:1  freq:1>, <emergency  cur_pos:2  freq:1>, <26%  cur_pos:3  freq:1>, <u571  cur_pos:4  freq:1>, <because  cur_pos:5  freq:1>, <hence  cur_pos:6  freq:1>, <capital  cur_pos:7  freq:1>, <frozen  cur_pos:9  freq:1>, <benefits  cur_pos:10  freq:1>, <google  cur_pos:11  freq:1>, <frozen  cur_pos:14  freq:1>, <google  cur_pos:15  freq:1>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.LengthTermTupleFilterTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/parse/LengthTermTupleFilterTest.java -->
    <test started-at="2021-05-14T09:10:21Z" name="./test/hust/cs/javacourse/search/parse/ScannerFilterAllInOneTest.java" finished-at="2021-05-14T09:10:21Z" duration-ms="0">
      <class name="hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest@4b53f538]" started-at="2021-05-14T09:10:21Z" name="testNext" data-provider="testScannerFilterAllInOne" finished-at="2021-05-14T09:10:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@57c758ac]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<activity  cur_pos:0  freq:1>, <destination  cur_pos:1  freq:1>, <emergency  cur_pos:2  freq:1>, <capital  cur_pos:7  freq:1>, <frozen  cur_pos:9  freq:1>, <benefits  cur_pos:10  freq:1>, <google  cur_pos:11  freq:1>, <frozen  cur_pos:14  freq:1>, <google  cur_pos:15  freq:1>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest@4b53f538]" started-at="2021-05-14T09:10:21Z" name="testNext" data-provider="testScannerFilterAllInOne" finished-at="2021-05-14T09:10:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@67a20f67]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<aaa  cur_pos:1  freq:1>, <bbb  cur_pos:2  freq:1>, <ccc  cur_pos:4  freq:1>, <ddd  cur_pos:6  freq:1>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/parse/ScannerFilterAllInOneTest.java -->
    <test started-at="2021-05-14T09:10:21Z" name="./test/hust/cs/javacourse/search/index/DocumentBuilderTest.java" finished-at="2021-05-14T09:10:21Z" duration-ms="579">
      <class name="hust.cs.javacourse.search.index.DocumentBuilderTest">
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6483f5ae]" started-at="2021-05-14T09:10:21Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-14T09:10:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docID: 0
docPath: C:/Users/Ray/Desktop/CSXJ1902_U201912633_zhangrui/Experiment1Test/test/config/..//text/2.txt
termTuple:
[<activity  cur_pos:0  freq:1>, <destination  cur_pos:1  freq:1>, <emergency  cur_pos:2  freq:1>, <capital  cur_pos:7  freq:1>, <frozen  cur_pos:9  freq:1>, <benefits  cur_pos:10  freq:1>, <google  cur_pos:11  freq:1>, <frozen  cur_pos:14  freq:1>, <google  cur_pos:15  freq:1>]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[
docID: 0
docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt
termTuple:
[<activity  cur_pos:0  freq:1>, <destination  cur_pos:1  freq:1>, <emergency  cur_pos:2  freq:1>, <capital  cur_pos:7  freq:1>, <frozen  cur_pos:9  freq:1>, <benefits  cur_pos:10  freq:1>, <google  cur_pos:11  freq:1>, <frozen  cur_pos:14  freq:1>, <google  cur_pos:15  freq:1>]
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6483f5ae]" started-at="2021-05-14T09:10:21Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-14T09:10:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docID: 0
docPath: C:/Users/Ray/Desktop/CSXJ1902_U201912633_zhangrui/Experiment1Test/test/config/..//text/2.txt
termTuple:
[<activity  cur_pos:0  freq:1>, <destination  cur_pos:1  freq:1>, <emergency  cur_pos:2  freq:1>, <26%  cur_pos:3  freq:1>, <u571  cur_pos:4  freq:1>, <because  cur_pos:5  freq:1>, <hence  cur_pos:6  freq:1>, <capital  cur_pos:7  freq:1>, <frozen  cur_pos:9  freq:1>, <benefits  cur_pos:10  freq:1>, <google  cur_pos:11  freq:1>, <frozen  cur_pos:14  freq:1>, <google  cur_pos:15  freq:1>]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[
docID: 0
docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt
termTuple:
[<activity  cur_pos:0  freq:1>, <destination  cur_pos:1  freq:1>, <emergency  cur_pos:2  freq:1>, <26%  cur_pos:3  freq:1>, <u571  cur_pos:4  freq:1>, <because  cur_pos:5  freq:1>, <hence  cur_pos:6  freq:1>, <capital  cur_pos:7  freq:1>, <frozen  cur_pos:9  freq:1>, <benefits  cur_pos:10  freq:1>, <google  cur_pos:11  freq:1>, <frozen  cur_pos:14  freq:1>, <google  cur_pos:15  freq:1>]
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6483f5ae]" started-at="2021-05-14T09:10:21Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-14T09:10:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docID: 0
docPath: C:/Users/Ray/Desktop/CSXJ1902_U201912633_zhangrui/Experiment1Test/test/config/..//text/2.txt
termTuple:
[<activity  cur_pos:0  freq:1>, <destination  cur_pos:1  freq:1>, <emergency  cur_pos:2  freq:1>, <26%  cur_pos:3  freq:1>, <u571  cur_pos:4  freq:1>, <capital  cur_pos:7  freq:1>, <frozen  cur_pos:9  freq:1>, <benefits  cur_pos:10  freq:1>, <google  cur_pos:11  freq:1>, <hahahahahahahahahahahahah  cur_pos:12  freq:1>, <ha  cur_pos:13  freq:1>, <frozen  cur_pos:14  freq:1>, <google  cur_pos:15  freq:1>]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[
docID: 0
docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt
termTuple:
[<activity  cur_pos:0  freq:1>, <destination  cur_pos:1  freq:1>, <emergency  cur_pos:2  freq:1>, <26%  cur_pos:3  freq:1>, <u571  cur_pos:4  freq:1>, <capital  cur_pos:7  freq:1>, <frozen  cur_pos:9  freq:1>, <benefits  cur_pos:10  freq:1>, <google  cur_pos:11  freq:1>, <hahahahahahahahahahahahah  cur_pos:12  freq:1>, <ha  cur_pos:13  freq:1>, <frozen  cur_pos:14  freq:1>, <google  cur_pos:15  freq:1>]
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6483f5ae]" started-at="2021-05-14T09:10:21Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-14T09:10:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docID: 0
docPath: C:/Users/Ray/Desktop/CSXJ1902_U201912633_zhangrui/Experiment1Test/test/config/..//text/2.txt
termTuple:
[<activity  cur_pos:0  freq:1>, <destination  cur_pos:1  freq:1>, <emergency  cur_pos:2  freq:1>, <because  cur_pos:5  freq:1>, <hence  cur_pos:6  freq:1>, <capital  cur_pos:7  freq:1>, <i  cur_pos:8  freq:1>, <frozen  cur_pos:9  freq:1>, <benefits  cur_pos:10  freq:1>, <google  cur_pos:11  freq:1>, <hahahahahahahahahahahahah  cur_pos:12  freq:1>, <ha  cur_pos:13  freq:1>, <frozen  cur_pos:14  freq:1>, <google  cur_pos:15  freq:1>]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[
docID: 0
docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt
termTuple:
[<activity  cur_pos:0  freq:1>, <destination  cur_pos:1  freq:1>, <emergency  cur_pos:2  freq:1>, <because  cur_pos:5  freq:1>, <hence  cur_pos:6  freq:1>, <capital  cur_pos:7  freq:1>, <i  cur_pos:8  freq:1>, <frozen  cur_pos:9  freq:1>, <benefits  cur_pos:10  freq:1>, <google  cur_pos:11  freq:1>, <hahahahahahahahahahahahah  cur_pos:12  freq:1>, <ha  cur_pos:13  freq:1>, <frozen  cur_pos:14  freq:1>, <google  cur_pos:15  freq:1>]
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6483f5ae]" started-at="2021-05-14T09:10:21Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-14T09:10:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docID: 0
docPath: C:/Users/Ray/Desktop/CSXJ1902_U201912633_zhangrui/Experiment1Test/test/config/..//text/2.txt
termTuple:
[<activity  cur_pos:0  freq:1>, <destination  cur_pos:1  freq:1>, <emergency  cur_pos:2  freq:1>, <26%  cur_pos:3  freq:1>, <u571  cur_pos:4  freq:1>, <because  cur_pos:5  freq:1>, <hence  cur_pos:6  freq:1>, <capital  cur_pos:7  freq:1>, <i  cur_pos:8  freq:1>, <frozen  cur_pos:9  freq:1>, <benefits  cur_pos:10  freq:1>, <google  cur_pos:11  freq:1>, <hahahahahahahahahahahahah  cur_pos:12  freq:1>, <ha  cur_pos:13  freq:1>, <frozen  cur_pos:14  freq:1>, <google  cur_pos:15  freq:1>]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[
docID: 0
docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt
termTuple:
[<activity  cur_pos:0  freq:1>, <destination  cur_pos:1  freq:1>, <emergency  cur_pos:2  freq:1>, <26%  cur_pos:3  freq:1>, <u571  cur_pos:4  freq:1>, <because  cur_pos:5  freq:1>, <hence  cur_pos:6  freq:1>, <capital  cur_pos:7  freq:1>, <i  cur_pos:8  freq:1>, <frozen  cur_pos:9  freq:1>, <benefits  cur_pos:10  freq:1>, <google  cur_pos:11  freq:1>, <hahahahahahahahahahahahah  cur_pos:12  freq:1>, <ha  cur_pos:13  freq:1>, <frozen  cur_pos:14  freq:1>, <google  cur_pos:15  freq:1>]
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testTestBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6483f5ae]" started-at="2021-05-14T09:10:21Z" name="testTestBuild" data-provider="testDocumentBuilder" finished-at="2021-05-14T09:10:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docID: 0
docPath: C:/Users/Ray/Desktop/CSXJ1902_U201912633_zhangrui/Experiment1Test/test/config/..//text/2.txt
termTuple:
[<activity  cur_pos:0  freq:1>, <destination  cur_pos:1  freq:1>, <emergency  cur_pos:2  freq:1>, <capital  cur_pos:7  freq:1>, <frozen  cur_pos:9  freq:1>, <benefits  cur_pos:10  freq:1>, <google  cur_pos:11  freq:1>, <frozen  cur_pos:14  freq:1>, <google  cur_pos:15  freq:1>]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[
docID: 0
docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt
termTuple:
[<activity  cur_pos:0  freq:1>, <destination  cur_pos:1  freq:1>, <emergency  cur_pos:2  freq:1>, <capital  cur_pos:7  freq:1>, <frozen  cur_pos:9  freq:1>, <benefits  cur_pos:10  freq:1>, <google  cur_pos:11  freq:1>, <frozen  cur_pos:14  freq:1>, <google  cur_pos:15  freq:1>]
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestBuild -->
        <test-method signature="testTestBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6483f5ae]" started-at="2021-05-14T09:10:21Z" name="testTestBuild" data-provider="testDocumentBuilder" finished-at="2021-05-14T09:10:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docID: 0
docPath: C:/Users/Ray/Desktop/CSXJ1902_U201912633_zhangrui/Experiment1Test/test/config/..//text/2.txt
termTuple:
[<activity  cur_pos:0  freq:1>, <destination  cur_pos:1  freq:1>, <emergency  cur_pos:2  freq:1>, <capital  cur_pos:7  freq:1>, <frozen  cur_pos:9  freq:1>, <benefits  cur_pos:10  freq:1>, <google  cur_pos:11  freq:1>, <frozen  cur_pos:14  freq:1>, <google  cur_pos:15  freq:1>]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[
docID: 0
docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt
termTuple:
[<activity  cur_pos:0  freq:1>, <destination  cur_pos:1  freq:1>, <emergency  cur_pos:2  freq:1>, <capital  cur_pos:7  freq:1>, <frozen  cur_pos:9  freq:1>, <benefits  cur_pos:10  freq:1>, <google  cur_pos:11  freq:1>, <frozen  cur_pos:14  freq:1>, <google  cur_pos:15  freq:1>]
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestBuild -->
      </class> <!-- hust.cs.javacourse.search.index.DocumentBuilderTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/index/DocumentBuilderTest.java -->
    <test started-at="2021-05-14T09:10:21Z" name="./test/hust/cs/javacourse/search/index/IndexTest.java" finished-at="2021-05-14T09:10:22Z" duration-ms="361">
      <class name="hust.cs.javacourse.search.index.IndexTest">
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractIndex, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-14T09:10:21Z" name="testTestToString" data-provider="testIndex" finished-at="2021-05-14T09:10:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[activity:
{docId:0  freq:3  positions:[0, 1, 6]}
{docId:1  freq:1  positions:[0]}
-------------------------------
benefits:
{docId:0  freq:2  positions:[2, 7]}
{docId:1  freq:1  positions:[10]}
-------------------------------
capital:
{docId:0  freq:2  positions:[3, 8]}
{docId:1  freq:1  positions:[7]}
-------------------------------
destination:
{docId:0  freq:2  positions:[4, 9]}
{docId:1  freq:1  positions:[1]}
-------------------------------
emergency:
{docId:0  freq:1  positions:[10]}
{docId:1  freq:1  positions:[2]}
-------------------------------
fizzy:
{docId:0  freq:1  positions:[5]}
-------------------------------
frozen:
{docId:1  freq:2  positions:[9, 14]}
-------------------------------
google:
{docId:1  freq:2  positions:[11, 15]}
-------------------------------
marketplace:
{docId:2  freq:1  positions:[0]}
-------------------------------
medical:
{docId:2  freq:1  positions:[1]}
-------------------------------
notification:
{docId:2  freq:1  positions:[3]}
-------------------------------
peninsula:
{docId:2  freq:1  positions:[5]}
-------------------------------
pollution:
{docId:2  freq:1  positions:[7]}
-------------------------------
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3d2ee678]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testAddDocument([Lhust.cs.javacourse.search.index.AbstractIndex;, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-14T09:10:21Z" name="testAddDocument" data-provider="testIndex" finished-at="2021-05-14T09:10:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractIndex;@66565121]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[
docID: 1
docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt
termTuple:
[<activity  cur_pos:0  freq:1>, <destination  cur_pos:1  freq:1>, <emergency  cur_pos:2  freq:1>, <capital  cur_pos:7  freq:1>, <frozen  cur_pos:9  freq:1>, <benefits  cur_pos:10  freq:1>, <google  cur_pos:11  freq:1>, <frozen  cur_pos:14  freq:1>, <google  cur_pos:15  freq:1>]
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDocument -->
        <test-method signature="testLoad(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-14T09:10:21Z" name="testLoad" data-provider="testIndex" finished-at="2021-05-14T09:10:21Z" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[activity:
{docId:0  freq:3  positions:[0, 1, 6]}
{docId:1  freq:1  positions:[0]}
-------------------------------
benefits:
{docId:0  freq:2  positions:[2, 7]}
{docId:1  freq:1  positions:[10]}
-------------------------------
capital:
{docId:0  freq:2  positions:[3, 8]}
{docId:1  freq:1  positions:[7]}
-------------------------------
destination:
{docId:0  freq:2  positions:[4, 9]}
{docId:1  freq:1  positions:[1]}
-------------------------------
emergency:
{docId:0  freq:1  positions:[10]}
{docId:1  freq:1  positions:[2]}
-------------------------------
fizzy:
{docId:0  freq:1  positions:[5]}
-------------------------------
frozen:
{docId:1  freq:2  positions:[9, 14]}
-------------------------------
google:
{docId:1  freq:2  positions:[11, 15]}
-------------------------------
marketplace:
{docId:2  freq:1  positions:[0]}
-------------------------------
medical:
{docId:2  freq:1  positions:[1]}
-------------------------------
notification:
{docId:2  freq:1  positions:[3]}
-------------------------------
peninsula:
{docId:2  freq:1  positions:[5]}
-------------------------------
pollution:
{docId:2  freq:1  positions:[7]}
-------------------------------
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/Users/Ray/Desktop/CSXJ1902_U201912633_zhangrui/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoad -->
        <test-method signature="testSave(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-14T09:10:21Z" name="testSave" data-provider="testIndex" finished-at="2021-05-14T09:10:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[activity:
{docId:0  freq:3  positions:[0, 1, 6]}
{docId:1  freq:1  positions:[0]}
-------------------------------
benefits:
{docId:0  freq:2  positions:[2, 7]}
{docId:1  freq:1  positions:[10]}
-------------------------------
capital:
{docId:0  freq:2  positions:[3, 8]}
{docId:1  freq:1  positions:[7]}
-------------------------------
destination:
{docId:0  freq:2  positions:[4, 9]}
{docId:1  freq:1  positions:[1]}
-------------------------------
emergency:
{docId:0  freq:1  positions:[10]}
{docId:1  freq:1  positions:[2]}
-------------------------------
fizzy:
{docId:0  freq:1  positions:[5]}
-------------------------------
frozen:
{docId:1  freq:2  positions:[9, 14]}
-------------------------------
google:
{docId:1  freq:2  positions:[11, 15]}
-------------------------------
marketplace:
{docId:2  freq:1  positions:[0]}
-------------------------------
medical:
{docId:2  freq:1  positions:[1]}
-------------------------------
notification:
{docId:2  freq:1  positions:[3]}
-------------------------------
peninsula:
{docId:2  freq:1  positions:[5]}
-------------------------------
pollution:
{docId:2  freq:1  positions:[7]}
-------------------------------
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/Users/Ray/Desktop/CSXJ1902_U201912633_zhangrui/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSave -->
        <test-method signature="testSearch(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractPostingList)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-14T09:10:21Z" name="testSearch" data-provider="testIndex" finished-at="2021-05-14T09:10:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[activity:
{docId:0  freq:3  positions:[0, 1, 6]}
{docId:1  freq:1  positions:[0]}
-------------------------------
benefits:
{docId:0  freq:2  positions:[2, 7]}
{docId:1  freq:1  positions:[10]}
-------------------------------
capital:
{docId:0  freq:2  positions:[3, 8]}
{docId:1  freq:1  positions:[7]}
-------------------------------
destination:
{docId:0  freq:2  positions:[4, 9]}
{docId:1  freq:1  positions:[1]}
-------------------------------
emergency:
{docId:0  freq:1  positions:[10]}
{docId:1  freq:1  positions:[2]}
-------------------------------
fizzy:
{docId:0  freq:1  positions:[5]}
-------------------------------
frozen:
{docId:1  freq:2  positions:[9, 14]}
-------------------------------
google:
{docId:1  freq:2  positions:[11, 15]}
-------------------------------
marketplace:
{docId:2  freq:1  positions:[0]}
-------------------------------
medical:
{docId:2  freq:1  positions:[1]}
-------------------------------
notification:
{docId:2  freq:1  positions:[3]}
-------------------------------
peninsula:
{docId:2  freq:1  positions:[5]}
-------------------------------
pollution:
{docId:2  freq:1  positions:[7]}
-------------------------------
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{docId:0  freq:3  positions:[0, 1, 6]}
{docId:1  freq:1  positions:[0]}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testGetDictionary(hust.cs.javacourse.search.index.AbstractIndex, java.util.Set)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-14T09:10:21Z" name="testGetDictionary" data-provider="testIndex" finished-at="2021-05-14T09:10:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[activity:
{docId:0  freq:3  positions:[0, 1, 6]}
{docId:1  freq:1  positions:[0]}
-------------------------------
benefits:
{docId:0  freq:2  positions:[2, 7]}
{docId:1  freq:1  positions:[10]}
-------------------------------
capital:
{docId:0  freq:2  positions:[3, 8]}
{docId:1  freq:1  positions:[7]}
-------------------------------
destination:
{docId:0  freq:2  positions:[4, 9]}
{docId:1  freq:1  positions:[1]}
-------------------------------
emergency:
{docId:0  freq:1  positions:[10]}
{docId:1  freq:1  positions:[2]}
-------------------------------
fizzy:
{docId:0  freq:1  positions:[5]}
-------------------------------
frozen:
{docId:1  freq:2  positions:[9, 14]}
-------------------------------
google:
{docId:1  freq:2  positions:[11, 15]}
-------------------------------
marketplace:
{docId:2  freq:1  positions:[0]}
-------------------------------
medical:
{docId:2  freq:1  positions:[1]}
-------------------------------
notification:
{docId:2  freq:1  positions:[3]}
-------------------------------
peninsula:
{docId:2  freq:1  positions:[5]}
-------------------------------
pollution:
{docId:2  freq:1  positions:[7]}
-------------------------------
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[activity, benefits, capital, destination, emergency, fizzy, frozen, google, marketplace, medical, notification, peninsula, pollution]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDictionary -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-14T09:10:21Z" name="testWriteObject" data-provider="testIndex" finished-at="2021-05-14T09:10:21Z" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[activity:
{docId:0  freq:3  positions:[0, 1, 6]}
{docId:1  freq:1  positions:[0]}
-------------------------------
benefits:
{docId:0  freq:2  positions:[2, 7]}
{docId:1  freq:1  positions:[10]}
-------------------------------
capital:
{docId:0  freq:2  positions:[3, 8]}
{docId:1  freq:1  positions:[7]}
-------------------------------
destination:
{docId:0  freq:2  positions:[4, 9]}
{docId:1  freq:1  positions:[1]}
-------------------------------
emergency:
{docId:0  freq:1  positions:[10]}
{docId:1  freq:1  positions:[2]}
-------------------------------
fizzy:
{docId:0  freq:1  positions:[5]}
-------------------------------
frozen:
{docId:1  freq:2  positions:[9, 14]}
-------------------------------
google:
{docId:1  freq:2  positions:[11, 15]}
-------------------------------
marketplace:
{docId:2  freq:1  positions:[0]}
-------------------------------
medical:
{docId:2  freq:1  positions:[1]}
-------------------------------
notification:
{docId:2  freq:1  positions:[3]}
-------------------------------
peninsula:
{docId:2  freq:1  positions:[5]}
-------------------------------
pollution:
{docId:2  freq:1  positions:[7]}
-------------------------------
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/Users/Ray/Desktop/CSXJ1902_U201912633_zhangrui/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-14T09:10:21Z" name="testReadObject" data-provider="testIndex" finished-at="2021-05-14T09:10:21Z" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[activity:
{docId:0  freq:3  positions:[0, 1, 6]}
{docId:1  freq:1  positions:[0]}
-------------------------------
benefits:
{docId:0  freq:2  positions:[2, 7]}
{docId:1  freq:1  positions:[10]}
-------------------------------
capital:
{docId:0  freq:2  positions:[3, 8]}
{docId:1  freq:1  positions:[7]}
-------------------------------
destination:
{docId:0  freq:2  positions:[4, 9]}
{docId:1  freq:1  positions:[1]}
-------------------------------
emergency:
{docId:0  freq:1  positions:[10]}
{docId:1  freq:1  positions:[2]}
-------------------------------
fizzy:
{docId:0  freq:1  positions:[5]}
-------------------------------
frozen:
{docId:1  freq:2  positions:[9, 14]}
-------------------------------
google:
{docId:1  freq:2  positions:[11, 15]}
-------------------------------
marketplace:
{docId:2  freq:1  positions:[0]}
-------------------------------
medical:
{docId:2  freq:1  positions:[1]}
-------------------------------
notification:
{docId:2  freq:1  positions:[3]}
-------------------------------
peninsula:
{docId:2  freq:1  positions:[5]}
-------------------------------
pollution:
{docId:2  freq:1  positions:[7]}
-------------------------------
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/Users/Ray/Desktop/CSXJ1902_U201912633_zhangrui/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
        <test-method signature="testOptimize(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractIndex)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-14T09:10:22Z" name="testOptimize" data-provider="testIndex" finished-at="2021-05-14T09:10:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[activity:
{docId:0  freq:3  positions:[0, 1, 6]}
{docId:1  freq:1  positions:[0]}
-------------------------------
benefits:
{docId:0  freq:2  positions:[2, 7]}
{docId:1  freq:1  positions:[10]}
-------------------------------
capital:
{docId:0  freq:2  positions:[3, 8]}
{docId:1  freq:1  positions:[7]}
-------------------------------
destination:
{docId:0  freq:2  positions:[4, 9]}
{docId:1  freq:1  positions:[1]}
-------------------------------
emergency:
{docId:0  freq:1  positions:[10]}
{docId:1  freq:1  positions:[2]}
-------------------------------
fizzy:
{docId:0  freq:1  positions:[5]}
-------------------------------
frozen:
{docId:1  freq:2  positions:[9, 14]}
-------------------------------
google:
{docId:1  freq:2  positions:[11, 15]}
-------------------------------
marketplace:
{docId:2  freq:1  positions:[0]}
-------------------------------
medical:
{docId:2  freq:1  positions:[1]}
-------------------------------
notification:
{docId:2  freq:1  positions:[3]}
-------------------------------
peninsula:
{docId:2  freq:1  positions:[5]}
-------------------------------
pollution:
{docId:2  freq:1  positions:[7]}
-------------------------------
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity:
{docId:0  freq:3  positions:[0, 1, 6]}
{docId:1  freq:1  positions:[0]}
-------------------------------
benefits:
{docId:0  freq:2  positions:[2, 7]}
{docId:1  freq:1  positions:[10]}
-------------------------------
capital:
{docId:0  freq:2  positions:[3, 8]}
{docId:1  freq:1  positions:[7]}
-------------------------------
destination:
{docId:0  freq:2  positions:[4, 9]}
{docId:1  freq:1  positions:[1]}
-------------------------------
emergency:
{docId:0  freq:1  positions:[10]}
{docId:1  freq:1  positions:[2]}
-------------------------------
fizzy:
{docId:0  freq:1  positions:[5]}
-------------------------------
frozen:
{docId:1  freq:2  positions:[9, 14]}
-------------------------------
google:
{docId:1  freq:2  positions:[11, 15]}
-------------------------------
marketplace:
{docId:2  freq:1  positions:[0]}
-------------------------------
medical:
{docId:2  freq:1  positions:[1]}
-------------------------------
notification:
{docId:2  freq:1  positions:[3]}
-------------------------------
peninsula:
{docId:2  freq:1  positions:[5]}
-------------------------------
pollution:
{docId:2  freq:1  positions:[7]}
-------------------------------
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptimize -->
        <test-method signature="testGetDocName(hust.cs.javacourse.search.index.AbstractIndex, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-14T09:10:22Z" name="testGetDocName" data-provider="testIndex" finished-at="2021-05-14T09:10:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[activity:
{docId:0  freq:3  positions:[0, 1, 6]}
{docId:1  freq:1  positions:[0]}
-------------------------------
benefits:
{docId:0  freq:2  positions:[2, 7]}
{docId:1  freq:1  positions:[10]}
-------------------------------
capital:
{docId:0  freq:2  positions:[3, 8]}
{docId:1  freq:1  positions:[7]}
-------------------------------
destination:
{docId:0  freq:2  positions:[4, 9]}
{docId:1  freq:1  positions:[1]}
-------------------------------
emergency:
{docId:0  freq:1  positions:[10]}
{docId:1  freq:1  positions:[2]}
-------------------------------
fizzy:
{docId:0  freq:1  positions:[5]}
-------------------------------
frozen:
{docId:1  freq:2  positions:[9, 14]}
-------------------------------
google:
{docId:1  freq:2  positions:[11, 15]}
-------------------------------
marketplace:
{docId:2  freq:1  positions:[0]}
-------------------------------
medical:
{docId:2  freq:1  positions:[1]}
-------------------------------
notification:
{docId:2  freq:1  positions:[3]}
-------------------------------
peninsula:
{docId:2  freq:1  positions:[5]}
-------------------------------
pollution:
{docId:2  freq:1  positions:[7]}
-------------------------------
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2fc6f97f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocName -->
      </class> <!-- hust.cs.javacourse.search.index.IndexTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/index/IndexTest.java -->
    <test started-at="2021-05-14T09:10:22Z" name="./test/hust/cs/javacourse/search/index/IndexBuilderTest.java" finished-at="2021-05-14T09:10:22Z" duration-ms="31">
      <class name="hust.cs.javacourse.search.index.IndexBuilderTest">
        <test-method signature="testBuildIndex(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractIndex)[pri:0, instance:hust.cs.javacourse.search.index.IndexBuilderTest@7f416310]" started-at="2021-05-14T09:10:22Z" name="testBuildIndex" data-provider="testIndexBuilder" finished-at="2021-05-14T09:10:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[activity:
{docId:0  freq:3  positions:[0, 1, 6]}
{docId:1  freq:1  positions:[0]}
-------------------------------
benefits:
{docId:0  freq:2  positions:[2, 7]}
{docId:1  freq:1  positions:[10]}
-------------------------------
capital:
{docId:0  freq:2  positions:[3, 8]}
{docId:1  freq:1  positions:[7]}
-------------------------------
destination:
{docId:0  freq:2  positions:[4, 9]}
{docId:1  freq:1  positions:[1]}
-------------------------------
emergency:
{docId:0  freq:1  positions:[10]}
{docId:1  freq:1  positions:[2]}
-------------------------------
fizzy:
{docId:0  freq:1  positions:[5]}
-------------------------------
frozen:
{docId:1  freq:2  positions:[9, 14]}
-------------------------------
google:
{docId:1  freq:2  positions:[11, 15]}
-------------------------------
marketplace:
{docId:2  freq:1  positions:[0]}
-------------------------------
medical:
{docId:2  freq:1  positions:[1]}
-------------------------------
notification:
{docId:2  freq:1  positions:[3]}
-------------------------------
peninsula:
{docId:2  freq:1  positions:[5]}
-------------------------------
pollution:
{docId:2  freq:1  positions:[7]}
-------------------------------
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity:
{docId:0  freq:3  positions:[0, 1, 6]}
{docId:1  freq:1  positions:[0]}
-------------------------------
benefits:
{docId:0  freq:2  positions:[2, 7]}
{docId:1  freq:1  positions:[10]}
-------------------------------
capital:
{docId:0  freq:2  positions:[3, 8]}
{docId:1  freq:1  positions:[7]}
-------------------------------
destination:
{docId:0  freq:2  positions:[4, 9]}
{docId:1  freq:1  positions:[1]}
-------------------------------
emergency:
{docId:0  freq:1  positions:[10]}
{docId:1  freq:1  positions:[2]}
-------------------------------
fizzy:
{docId:0  freq:1  positions:[5]}
-------------------------------
frozen:
{docId:1  freq:2  positions:[9, 14]}
-------------------------------
google:
{docId:1  freq:2  positions:[11, 15]}
-------------------------------
marketplace:
{docId:2  freq:1  positions:[0]}
-------------------------------
medical:
{docId:2  freq:1  positions:[1]}
-------------------------------
notification:
{docId:2  freq:1  positions:[3]}
-------------------------------
peninsula:
{docId:2  freq:1  positions:[5]}
-------------------------------
pollution:
{docId:2  freq:1  positions:[7]}
-------------------------------
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildIndex -->
      </class> <!-- hust.cs.javacourse.search.index.IndexBuilderTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/index/IndexBuilderTest.java -->
    <test started-at="2021-05-14T09:10:22Z" name="./test/hust/cs/javacourse/search/query/HitTest.java" finished-at="2021-05-14T09:10:22Z" duration-ms="47">
      <class name="hust.cs.javacourse.search.query.HitTest">
        <test-method signature="testGetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-14T09:10:22Z" name="testGetContent" data-provider="testHit" finished-at="2021-05-14T09:10:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
Hit{
docId=1
docPath='D:\IdeaWorkspace\SeachEngine\text\2.txt'
content=
--------------------------
activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
-----------------------------
termPostingMapping={activity={docId:1  freq:1  positions:[0]}}
score=-1.0
}



]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-14T09:10:22Z" name="testGetContent" data-provider="testHit" finished-at="2021-05-14T09:10:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
Hit{
docId=0
docPath='D:\IdeaWorkspace\SeachEngine\text\1.txt'
content=
--------------------------
activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
-----------------------------
termPostingMapping={activity={docId:0  freq:3  positions:[0, 1, 6]}}
score=-3.0
}



]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-14T09:10:22Z" name="testGetDocId" data-provider="testHit" finished-at="2021-05-14T09:10:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
Hit{
docId=1
docPath='D:\IdeaWorkspace\SeachEngine\text\2.txt'
content=
--------------------------
activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
-----------------------------
termPostingMapping={activity={docId:1  freq:1  positions:[0]}}
score=-1.0
}



]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-14T09:10:22Z" name="testGetDocPath" data-provider="testHit" finished-at="2021-05-14T09:10:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
Hit{
docId=0
docPath='D:\IdeaWorkspace\SeachEngine\text\1.txt'
content=
--------------------------
activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
-----------------------------
termPostingMapping={activity={docId:0  freq:3  positions:[0, 1, 6]}}
score=-3.0
}



]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:\IdeaWorkspace\SeachEngine\text\1.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-14T09:10:22Z" name="testGetDocId" data-provider="testHit" finished-at="2021-05-14T09:10:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
Hit{
docId=0
docPath='D:\IdeaWorkspace\SeachEngine\text\1.txt'
content=
--------------------------
activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
-----------------------------
termPostingMapping={activity={docId:0  freq:3  positions:[0, 1, 6]}}
score=-3.0
}



]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-14T09:10:22Z" name="testGetDocPath" data-provider="testHit" finished-at="2021-05-14T09:10:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
Hit{
docId=1
docPath='D:\IdeaWorkspace\SeachEngine\text\2.txt'
content=
--------------------------
activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
-----------------------------
termPostingMapping={activity={docId:1  freq:1  positions:[0]}}
score=-1.0
}



]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:\IdeaWorkspace\SeachEngine\text\2.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-14T09:10:22Z" name="testGetScore" data-provider="testHit" finished-at="2021-05-14T09:10:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
Hit{
docId=1
docPath='D:\IdeaWorkspace\SeachEngine\text\2.txt'
content=
--------------------------
activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
-----------------------------
termPostingMapping={activity={docId:1  freq:1  positions:[0]}}
score=-1.0
}



]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScore -->
        <test-method signature="testSetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-14T09:10:22Z" name="testSetScore" data-provider="testHit" finished-at="2021-05-14T09:10:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
Hit{
docId=0
docPath='D:\IdeaWorkspace\SeachEngine\text\1.txt'
content=
--------------------------
activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
-----------------------------
termPostingMapping={activity={docId:0  freq:3  positions:[0, 1, 6]}}
score=3.0
}



]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetScore -->
        <test-method signature="testSetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-14T09:10:22Z" name="testSetScore" data-provider="testHit" finished-at="2021-05-14T09:10:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
Hit{
docId=1
docPath='D:\IdeaWorkspace\SeachEngine\text\2.txt'
content=
--------------------------
activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
-----------------------------
termPostingMapping={activity={docId:1  freq:1  positions:[0]}}
score=1.0
}



]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetScore -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-14T09:10:22Z" name="testSetContent" data-provider="testHit" finished-at="2021-05-14T09:10:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
Hit{
docId=1
docPath='D:\IdeaWorkspace\SeachEngine\text\2.txt'
content=
--------------------------
new content2
-----------------------------
termPostingMapping={activity={docId:1  freq:1  positions:[0]}}
score=-1.0
}



]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[new content2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-14T09:10:22Z" name="testSetContent" data-provider="testHit" finished-at="2021-05-14T09:10:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
Hit{
docId=0
docPath='D:\IdeaWorkspace\SeachEngine\text\1.txt'
content=
--------------------------
new content1
-----------------------------
termPostingMapping={activity={docId:0  freq:3  positions:[0, 1, 6]}}
score=-3.0
}



]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[new content1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testGetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-14T09:10:22Z" name="testGetScore" data-provider="testHit" finished-at="2021-05-14T09:10:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
Hit{
docId=0
docPath='D:\IdeaWorkspace\SeachEngine\text\1.txt'
content=
--------------------------
activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
-----------------------------
termPostingMapping={activity={docId:0  freq:3  positions:[0, 1, 6]}}
score=-3.0
}



]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScore -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.query.AbstractHit;, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-14T09:10:22Z" name="testCompareTo" data-provider="testHit" finished-at="2021-05-14T09:10:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@5f9678e1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.query.AbstractHit, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-14T09:10:22Z" name="testTestToString" data-provider="testHit" finished-at="2021-05-14T09:10:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
Hit{
docId=0
docPath='D:\IdeaWorkspace\SeachEngine\text\1.txt'
content=
--------------------------
activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
-----------------------------
termPostingMapping={activity={docId:0  freq:3  positions:[0, 1, 6]}}
score=-3.0
}



]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@c4ed84]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testGetTermPostingMapping(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-14T09:10:22Z" name="testGetTermPostingMapping" data-provider="testHit" finished-at="2021-05-14T09:10:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
Hit{
docId=0
docPath='D:\IdeaWorkspace\SeachEngine\text\1.txt'
content=
--------------------------
activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
-----------------------------
termPostingMapping={activity={docId:0  freq:3  positions:[0, 1, 6]}}
score=-3.0
}



]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTermPostingMapping -->
        <test-method signature="testGetTermPostingMapping(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-14T09:10:22Z" name="testGetTermPostingMapping" data-provider="testHit" finished-at="2021-05-14T09:10:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
Hit{
docId=1
docPath='D:\IdeaWorkspace\SeachEngine\text\2.txt'
content=
--------------------------
activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
-----------------------------
termPostingMapping={activity={docId:1  freq:1  positions:[0]}}
score=-1.0
}



]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTermPostingMapping -->
      </class> <!-- hust.cs.javacourse.search.query.HitTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/query/HitTest.java -->
    <test started-at="2021-05-14T09:10:22Z" name="./test/hust/cs/javacourse/search/query/IndexSearcherTest.java" finished-at="2021-05-14T09:10:22Z" duration-ms="94">
      <class name="hust.cs.javacourse.search.index.PostingListTest">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-14T09:10:20Z" name="beforeSuite" finished-at="2021-05-14T09:10:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
      </class> <!-- hust.cs.javacourse.search.index.PostingListTest -->
      <class name="hust.cs.javacourse.search.query.IndexSearcherTest">
        <test-method signature="testSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@74294adb]" started-at="2021-05-14T09:10:22Z" name="testSearch" data-provider="testIndexSearcher" finished-at="2021-05-14T09:10:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@77a98a6a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@78fbff54]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@74294adb]" started-at="2021-05-14T09:10:22Z" name="testSearch" data-provider="testIndexSearcher" finished-at="2021-05-14T09:10:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@57459491]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@3f0846c6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testTestSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@74294adb]" started-at="2021-05-14T09:10:22Z" name="testTestSearch" data-provider="testIndexSearcher" finished-at="2021-05-14T09:10:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@3e10dc6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@7e22550a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestSearch -->
      </class> <!-- hust.cs.javacourse.search.query.IndexSearcherTest -->
    </test> <!-- ./test/hust/cs/javacourse/search/query/IndexSearcherTest.java -->
  </suite> <!-- All Test Suite -->
</testng-results>
